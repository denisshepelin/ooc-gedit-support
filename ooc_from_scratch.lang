<?xml version="1.0" encoding="UTF-8"?>
<!--

 Authors: Marco Barisione, Emanuele Aina
 Copyright (C) 2005-2007 Marco Barisione <barisione@gmail.com>
 Copyright (C) 2005-2007 Emanuele Aina

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Library General Public
 License as published by the Free Software Foundation; either
 version 2 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Library General Public License for more details.

 You should have received a copy of the GNU Library General Public
 License along with this library; if not, write to the
 Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 Boston, MA 02111-1307, USA.

-->
<language id="ooc" _name="OOC" version="2.0" _section="Sources">
    <metadata>
      <property name="mimetypes">text/x-ooc</property>
      <property name="globs">*.ooc</property>
      <property name="line-comment-start">//</property>
      <property name="block-comment-start">/*</property>
      <property name="block-comment-end">*/</property>
    </metadata>

    <styles>
        <style id="comment"           _name="Comment"             map-to="def:comment"/>
        <style id="error"             _name="Error"               map-to="def:error"/>
        <style id="string"            _name="String"              map-to="def:string"/>              
        <style id="included-file"     _name="Included File"       map-to="def:string"/>
        <style id="char"              _name="Character"           map-to="def:character"/>
        <style id="keyword"           _name="Keyword"             map-to="def:keyword"/>
        <style id="type"              _name="Data Type"           map-to="def:type"/>               
        <style id="escaped-character" _name="Escaped Character"   map-to="def:special-char"/>
        <style id="floating-point"    _name="Floating point number" map-to="def:floating-point"/>
        <style id="decimal"           _name="Decimal number"      map-to="def:decimal"/>
        <style id="octal"             _name="Octal number"        map-to="def:base-n-integer"/>
        <style id="hexadecimal"       _name="Hexadecimal number"  map-to="def:base-n-integer"/>
        <style id="boolean"           _name="Boolean value"       map-to="def:boolean"/>
    </styles>

    <definitions>
        <!-- TODO: what about scanf ? -->
       
        

        <define-regex id="escaped-character" extended="true">
            \\(                   # leading backslash
            [\\\"\'nrbtfav\?] |   # escaped character
            [0-7]{1,3} |          # one, two, or three octal digits
            x[0-9A-Fa-f]+         # 'x' followed by hex digits
            )
        </define-regex>

        <context id="ooc">
            <include>

                

                <!-- Comments -->
                <context id="comment" style-ref="comment" end-at-line-end="true">
                    <start>//</start>
                    <include>
                      <context ref="def:in-line-comment"/>
                    </include>
                </context>

                <context id="comment-multiline" style-ref="comment">
                    <start>/\*</start>
                    <end>\*/</end>
                    <include>
                        <context ref="def:in-comment"/>
                    </include>
                </context>

                <context id="close-comment-outside-comment" style-ref="error">
                    <match>\*/(?!\*)</match>
                </context>                                

                <context id="string" style-ref="string" end-at-line-end="true">
                    <start>L?"</start>
                    <end>"</end>                    
                </context>

                <context id="char" style-ref="char">
                    <match>L?'(\%{escaped-character}|.)'</match>
                </context>

                <!-- http://www.lysator.liu.se/c/ANSI-C-grammar-l.html -->
                <context id="float" style-ref="floating-point">
                    <match extended="true">
                        (?&lt;![\w\.])
                        ((\.[0-9]+ | [0-9]+\.[0-9]*) ([Ee][+-]?[0-9]*)? |
                         ([0-9]+[Ee][+-]?[0-9]*))
                        [fFlL]?
                        (?![\w\.])
                    </match>
                </context>

                <context id="hexadecimal" style-ref="hexadecimal">
                    <match extended="true">
                        (?&lt;![\w\.])
                        0[xX][a-fA-F0-9]+[uUlL]*
                        (?![\w\.])
                    </match>
                </context>

                <context id="octal" style-ref="octal">
                    <match extended="true">
                        (?&lt;![\w\.])
                        0[0-7]+[uUlL]*
                        (?![\w\.])
                    </match>
                </context>

                <context id="decimal" style-ref="decimal">
                    <match extended="true">
                        (?&lt;![\w\.])
                        [0-9]+[uUlL]*
                        (?![\w\.])
                    </match>
                </context>

                <!-- Keywords -->
               <context id="keysymbols" style-ref="keyword"> 
                      <keyword>:=</keyword>
                      <keyword>::</keyword>
                      <keyword>=</keyword>
                      <keyword>*=</keyword>
                      <keyword>+=</keyword>
                      <keyword>-=</keyword>
                      <keyword>/=</keyword>
                      <keyword>==</keyword>
                      <keyword>=</keyword>
                      <keyword>@</keyword>
                      <keyword>~</keyword>
                      <keyword>-></keyword>
                      <keyword>|</keyword>
                      <keyword>||</keyword>
                      <keyword>:?></keyword>
                      <keyword>^</keyword>
                      <keyword>..</keyword>
                       
                </context>
                
                
                
                
                <context id="keywords" style-ref="keyword">
                        <keyword>class</keyword> 
                        <keyword>cover</keyword> 
                        <keyword>interface</keyword> 
                        <keyword>implement</keyword> 
                        <keyword>func</keyword> 
                        <keyword>abstract</keyword> 
                        <keyword>extends</keyword> 
                        <keyword>from</keyword> 
                        <keyword>this</keyword> 
                        <keyword>super</keyword> 
                        <keyword>new</keyword> 
                        <keyword>const</keyword> 
                        <keyword>final</keyword> 
                        <keyword>static</keyword> 
                        <keyword>include</keyword> 
                        <keyword>import</keyword> 
                        <keyword>use</keyword> 
                        <keyword>extern</keyword> 
                        <keyword>inline</keyword>
                        <keyword>proto</keyword> 
                        <keyword>break</keyword> 
                        <keyword>continue</keyword> 
                        <keyword>fallthrough</keyword> 
                        <keyword>operator</keyword> 
                        <keyword>if</keyword> 
                        <keyword>else</keyword> 
                        <keyword>for</keyword> 
                        <keyword>while</keyword> 
                        <keyword>do</keyword> 
                        <keyword>switch</keyword> 
                        <keyword>case</keyword> 
                        <keyword>as</keyword> 
                        <keyword>in</keyword> 
                        <keyword>version</keyword> 
                        <keyword>return</keyword> 
                        <keyword>true</keyword> 
                        <keyword>false</keyword> 
                        <keyword>null</keyword> 
                        <keyword>default</keyword> 
                </context>

                <context id="types" style-ref="type">
                    <keyword>Int</keyword>
                          <keyword>Int8</keyword> 
                          <keyword>Int16</keyword> 
                          <keyword>Int32</keyword> 
                          <keyword>Int64</keyword> 
                          <keyword>Int80</keyword> 
                          <keyword>Int128</keyword>
                          <keyword>UInt</keyword>
                          <keyword>UInt8</keyword> 
                          <keyword>UInt16</keyword> 
                          <keyword>UInt32</keyword> 
                          <keyword>UInt64</keyword> 
                          <keyword>UInt80</keyword> 
                          <keyword>UInt128</keyword>
                          <keyword>Octet</keyword> 
                          <keyword>Short</keyword> 
                          <keyword>UShort</keyword> 
                          <keyword>Long</keyword> 
                          <keyword>ULong</keyword> 
                          <keyword>LLong</keyword> 
                          <keyword>ULLong</keyword>
                          <keyword>Float</keyword> 
                          <keyword>Double</keyword> 
                          <keyword>LDouble</keyword> 
                          <keyword>Float32</keyword> 
                          <keyword>Float64</keyword> 
                          <keyword>Float128</keyword>
                          <keyword>Char</keyword> 
                          <keyword>UChar</keyword> 
                          <keyword>WChar</keyword> 
                          <keyword>String</keyword>
                          <keyword>Void</keyword> 
                          <keyword>Pointer</keyword> 
                          <keyword>Bool</keyword> 
                          <keyword>SizeT</keyword> 
                          <keyword>This</keyword>
                </context>


                

                <!-- C99 booleans -->
                <context id="boolean" style-ref="boolean">
                    <keyword>true</keyword>
                    <keyword>false</keyword>
                </context>

            </include>
        </context>
    </definitions>
</language>
